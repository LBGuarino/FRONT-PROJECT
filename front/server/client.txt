EN NEXT JS LOS COMPONENTES POR DEFECTO SON SERVER COMPONENTS

DIFERENCIAS ENTRE SERVER SIDE Y CLIENT SIDE COMPONENTS EN NEXT JS...


SSR. (SERVER SIDE RENDERING)

PODEMOS DELEGAR A LOS COMPONENTES DEL LADO DEL SERVIDOR TAREAS PESADAS // ACCESO A DATOS SENSIBLES, CON EL FIN
DE MEJORAR EL RENDIMIENTO Y ROBUSTEZ DE NUESTRA APLICACION.
AL OBTENER Y PROCESAR DATOS EN EL SERVIDOR, SE GARANTIZA UNA EXPERIENCIA MAS CONSISTENTE Y SEGURA PARA TODOS
LOS USUARIOS, INDEPENDIENTEMENTE DE SU DISPOSITIVO O NAVEGADOR.

/// PERMITEN REALIZAR OPERACIONES ASYNC

//HACER HTTP REQUESTS, ACCEDER A LA BDD
Recuerda que ... ðŸ§ 
NO todos los Server Components serÃ¡n async. Esto Ãºnicamente ocurrirÃ¡ con aquellos componentes que requieran 
de la ejecuciÃ³n de operaciones de esta naturaleza.

//SEGURIDAD

LO SERVER SIDE COMPONENTS PERMITEN MANTENER DATOS Y LOGICA SENSIBLE EN EL SERVER, COMO TOKENS Y CLAVES API

//CACHE
AL RENDERIZAR EN EL SERVER, EL RESULTADO PUEDE SER ALMACENADO EN CACHE Y REUTILIZADO EN SOLICITUDES
POSTERIORES. MEJORA DEL RENDIMIENTO AL BAJAR LA CANTIDAD DE RENDERIZACIONES Y OBTENCION DE DATOS REALIZADA
EN CADA SOLICITUD.

//TAMAÃ‘O DE PAQUETES
LOS SERVER SIDE COMP PERMITEN MANTENER DEPENDENCIAS GRANDES QUE PREVIAMENTE PODRIAN AFECTAR EL TAMAÃ‘O DE
PAQUETES JS DEL LADO DEL CLIENTE. 

////// ESTRATEGIAS DE RENDERIZACION //////
ESTATICA DINAMICA STREAMING

RENDER ESTATICA (POR DEFECTO EN NEXT) //////

GENERA Y ALMACENA PAGINAS COMO ARCHIVOS ESTATICOS DURANTE COMP.
UTIL CUANDO SE USA EN UNA RUTA QUE NO CONTIENE DATOS PERSONALIZADOS
PARA EL USUARIO Y QUE PUEDEN CONOCERSE EN EL MOMENTO DE LA COMPILACION,
SIN LA NECESIDAD DE EJECUTAR LOGICA DEL SERVIDOR CON CADA REQUEST. 
ej.. HOMEPAGE, BLOGS, DOCS, PRODUCTPAGE, etc...

RENDER DINAMICA //////

LAS RUTAS SE PRESENTAN PARA CADA USUARIO EN EL MOMENTO DE LA SOLICITUD.
PERMITE GENERAR PAGINAS CON CONTENIDO ADAPTADO A LOS DATOS Y CONTEXTOS ESPECIFICOS DE
CADA PETICION DEL USUARIO 
ej... RUTAS QUE CONTIENEN DATOS PERSONALIZADOS COMO COOKIES O PARAMS DENTRO DE LA URL.

VENTAJA ==> NO NECESITAMOS ELEGIR ENTRE RENDERIZADO ESTATICO O DINAMICO.
NEXT SE ENCARGA DE ESTO CON BASE EN LAS FUNCIONES Y API UTLIZADAS.

/////// CLIENTE SIDE RENDERING CSR /////////

HERRAMIENTAS QUE POSIBILITAN LA CREACION DE INTERFACES DE USUARIO MAS RECEPTIVAS,
LAS CUALES PUEDEN SER VISUALIZADAS POR EL CLIENTE AL REALIZAR UNA SOLICITUD.
EN NEXT, EL USO DE ESTOS COMPONENTES ES OPCIONAL Y SE DEBE ESPECIFICAR EN QUE COMPONENTES DECIDIMOS
UTLIZARLO.

BENEFICIOS//
INTERACTIVIDAD
VELOCIDAD DE CARGA
SEPARACION DE PREOCUPACIONES 

//// DATA FLOW SERVER SIDE RENDERING ///
LOS PATRONES DE COMPONENTES DEL SERVIDOR SON ESTRATEGIAS Y TECNICAS UTILIZADAS PARA ESTRUCTURAR Y 
GESTIONAR LA LOGICA DEL LADO DEL SERVIDOR. 

FETCHING... HERRAMIENTA DE NEXT QUE PERMITE ALMACENAR LOS DATOS EN CACHE Y NOS PERMITE LUEGO
ACCEDER A ELLOS SIN NECESIDAD DE TENER QUE HACER LA CONSULTA NUEVAMENTE.

/ CODIGO DEL SERVER FUERA DEL ENTORNO DEL CLIENTE
SERVER ONLY 


////// DATA FLOW CLIENT SIDE RENDERING //////
LOS PATRONES DE COMPONENTES DEL CLIENTE SON ENFOQUES Y PRACTICAS DE DESARRLLO QUE APROVECHAN 
LA CAPACIDAD DE EJECUTAR LOGICA EN EL NAV DEL USUARIO 

OPTIMIZACION DE UBICACION!!!!!

CUANDO TRABAJAMOS CON CLIENT COMPONENTS, DEBEMOS ESFORZARNOS POR UBICARLOS EN LA PARTE MAS BAJA 
POSIBLE DE NUESTRO ARBOL DE COMPONENTES.

INTERPOLACION DE COMPONENTES 
PASAR COMPONENTES DEL SERVIDOR AL CLIENTE COMO PROPS 
